/************************************************************/
/*****              SqlDataProvider                     *****/
/*****                                                  *****/
/*****                                                  *****/
/***** Note: To manually execute this script you must   *****/
/*****       perform a search and replace operation     *****/
/*****       for {databaseOwner} and {objectQualifier}  *****/
/*****                                                  *****/
/************************************************************/

/** Create Table **/

if not exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}Philip_SSM_Quote_Building]') and OBJECTPROPERTY(id, N'IsTable') = 1)
	BEGIN
		CREATE TABLE {databaseOwner}[{objectQualifier}Philip_SSM_Quote_Building]
		(
			[ModuleID] [int] NOT NULL,
			[ItemID] [int] NOT NULL IDENTITY(1, 1),
			[Content] [ntext] NOT NULL,
			[CreatedByUser] [int] NOT NULL,
			[CreatedDate] [datetime] NOT NULL
		)

		ALTER TABLE {databaseOwner}[{objectQualifier}Philip_SSM_Quote_Building] ADD CONSTRAINT [PK_{objectQualifier}Philip_SSM_Quote_Building] PRIMARY KEY CLUSTERED  ([ItemID])
		CREATE NONCLUSTERED INDEX [IX_{objectQualifier}Philip_SSM_Quote_Building] ON {databaseOwner}[{objectQualifier}Philip_SSM_Quote_Building] ([ModuleID])

		ALTER TABLE {databaseOwner}[{objectQualifier}Philip_SSM_Quote_Building] WITH NOCHECK ADD CONSTRAINT [FK_{objectQualifier}Philip_SSM_Quote_Building_{objectQualifier}Modules] FOREIGN KEY ([ModuleID]) REFERENCES {databaseOwner}[{objectQualifier}Modules] ([ModuleID]) ON DELETE CASCADE NOT FOR REPLICATION
	END
GO


/** Drop Existing Stored Procedures **/

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}Philip_GetSSM_Quote_Buildings]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	drop procedure {databaseOwner}{objectQualifier}Philip_GetSSM_Quote_Buildings
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}Philip_GetSSM_Quote_Building]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	drop procedure {databaseOwner}{objectQualifier}Philip_GetSSM_Quote_Building
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}Philip_AddSSM_Quote_Building]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	drop procedure {databaseOwner}{objectQualifier}Philip_AddSSM_Quote_Building
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}Philip_UpdateSSM_Quote_Building]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	drop procedure {databaseOwner}{objectQualifier}Philip_UpdateSSM_Quote_Building
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}Philip_DeleteSSM_Quote_Building]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	drop procedure {databaseOwner}{objectQualifier}Philip_DeleteSSM_Quote_Building
GO

/** Create Stored Procedures **/


create procedure {databaseOwner}{objectQualifier}Philip_GetSSM_Quote_Buildings

	@ModuleId int

as

select ModuleId,
       ItemId,
       Content,
       CreatedByUser,
       {objectQualifier}Philip_SSM_Quote_Building.CreatedDate
from {objectQualifier}Philip_SSM_Quote_Building with (nolock)
left outer join {objectQualifier}Users on {objectQualifier}Philip_SSM_Quote_Building.CreatedByUser = {objectQualifier}Users.UserId
where  ModuleId = @ModuleId
GO

create procedure {databaseOwner}{objectQualifier}Philip_GetSSM_Quote_Building

	@ModuleId int,
        @ItemId int

as

select ModuleId,
       ItemId,
       Content,
       CreatedByUser,
       {objectQualifier}Philip_SSM_Quote_Building.CreatedDate
from {objectQualifier}Philip_SSM_Quote_Building with (nolock)
left outer join {objectQualifier}Users on {objectQualifier}Philip_SSM_Quote_Building.CreatedByUser = {objectQualifier}Users.UserId
where  ModuleId = @ModuleId
and ItemId = @ItemId
GO


create procedure {databaseOwner}{objectQualifier}Philip_AddSSM_Quote_Building

	@ModuleId       int,
	@Content        ntext,
	@UserID         int

as

insert into {objectQualifier}Philip_SSM_Quote_Building (
	ModuleId,
	Content,
	CreatedByUser,
	CreatedDate
) 
values (
	@ModuleId,
	@Content,
	@UserID,
	getdate()
)

GO

create procedure {databaseOwner}{objectQualifier}Philip_UpdateSSM_Quote_Building

	@ModuleId       int,
        @ItemId         int,
	@Content        ntext,
	@UserID         int

as

update {objectQualifier}Philip_SSM_Quote_Building
set    Content       = @Content,
       CreatedByUser = @UserID,
       CreatedDate   = getdate()
where  ModuleId = @ModuleId
and    ItemId = @ItemId

GO

create procedure {databaseOwner}{objectQualifier}Philip_DeleteSSM_Quote_Building

	@ModuleId       int,
        @ItemId         int

as

delete
from   {objectQualifier}Philip_SSM_Quote_Building
where  ModuleId = @ModuleId
and    ItemId = @ItemId

GO

/************************************************************/
/*****              SqlDataProvider                     *****/
/************************************************************/